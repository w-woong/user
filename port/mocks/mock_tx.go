// Code generated by MockGen. DO NOT EDIT.
// Source: ./tx.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	port "github.com/w-woong/user/port"
)

// MockTxBeginner is a mock of TxBeginner interface.
type MockTxBeginner struct {
	ctrl     *gomock.Controller
	recorder *MockTxBeginnerMockRecorder
}

// MockTxBeginnerMockRecorder is the mock recorder for MockTxBeginner.
type MockTxBeginnerMockRecorder struct {
	mock *MockTxBeginner
}

// NewMockTxBeginner creates a new mock instance.
func NewMockTxBeginner(ctrl *gomock.Controller) *MockTxBeginner {
	mock := &MockTxBeginner{ctrl: ctrl}
	mock.recorder = &MockTxBeginnerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTxBeginner) EXPECT() *MockTxBeginnerMockRecorder {
	return m.recorder
}

// Begin mocks base method.
func (m *MockTxBeginner) Begin() (port.TxController, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Begin")
	ret0, _ := ret[0].(port.TxController)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Begin indicates an expected call of Begin.
func (mr *MockTxBeginnerMockRecorder) Begin() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Begin", reflect.TypeOf((*MockTxBeginner)(nil).Begin))
}

// MockTxController is a mock of TxController interface.
type MockTxController struct {
	ctrl     *gomock.Controller
	recorder *MockTxControllerMockRecorder
}

// MockTxControllerMockRecorder is the mock recorder for MockTxController.
type MockTxControllerMockRecorder struct {
	mock *MockTxController
}

// NewMockTxController creates a new mock instance.
func NewMockTxController(ctrl *gomock.Controller) *MockTxController {
	mock := &MockTxController{ctrl: ctrl}
	mock.recorder = &MockTxControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTxController) EXPECT() *MockTxControllerMockRecorder {
	return m.recorder
}

// Commit mocks base method.
func (m *MockTxController) Commit() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Commit")
	ret0, _ := ret[0].(error)
	return ret0
}

// Commit indicates an expected call of Commit.
func (mr *MockTxControllerMockRecorder) Commit() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Commit", reflect.TypeOf((*MockTxController)(nil).Commit))
}

// Rollback mocks base method.
func (m *MockTxController) Rollback() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Rollback")
	ret0, _ := ret[0].(error)
	return ret0
}

// Rollback indicates an expected call of Rollback.
func (mr *MockTxControllerMockRecorder) Rollback() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Rollback", reflect.TypeOf((*MockTxController)(nil).Rollback))
}
